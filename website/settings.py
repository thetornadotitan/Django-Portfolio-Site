"""
Django settings for website project.

Generated by 'django-admin startproject' using Django 5.2.dev20241220131810.

For more information on this file, see
https://docs.djangoproject.com/en/dev/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/dev/ref/settings/
"""

import os
from pathlib import Path
from dotenv.main import load_dotenv

SESSION_COOKIE_SECURE=True
CSRF_COOKIE_SECURE=True

ALLOWED_HOSTS = ["isaachisey.com", "127.0.0.1"]

# 1) Trust your siteâ€™s HTTPS origins (Django 4+ requires scheme in entries)
CSRF_TRUSTED_ORIGINS = [
    "https://isaachisey.com",
    "https://www.isaachisey.com",  # include if you might use www
]

SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

env_path = load_dotenv(os.path.join(BASE_DIR, '.env'))
load_dotenv(env_path)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/dev/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DEBUG_MODE")

ALLOWED_HOSTS = ["isaachisey.com", "127.0.0.1"]

# Application definition

INSTALLED_APPS = [
    "landing.apps.LandingConfig",
    "blog.apps.BlogConfig",
    "about.apps.AboutConfig",
    "projects.apps.ProjectsConfig",
    "scrapbook.apps.ScrapbookConfig",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_summernote",
    "django_bleach"
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    'whitenoise.middleware.WhiteNoiseMiddleware',
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "website.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, 'templates'),],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "website.wsgi.application"

# Database
# https://docs.djangoproject.com/en/dev/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}

# Password validation
# https://docs.djangoproject.com/en/dev/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/dev/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/dev/howto/static-files/

STATIC_URL = "static_files/"
STATIC_ROOT = os.path.join(BASE_DIR, 'static_files')
MEDIA_URL = 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# Default primary key field type
# https://docs.djangoproject.com/en/dev/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

def example_test_func(request):
    return request.user.has_perm('django_summernote.add_attachment')

SUMMERNOTE_CONFIG = {
    # Require users to be authenticated for uploading attachments.
    'attachment_require_authentication': True,

    # You can completely disable the attachment feature.
    'disable_attachment': False,

    # Set to `False` to return attachment paths in relative URIs.
    'attachment_absolute_uri': True,

    # test_func in summernote upload view. (Allow upload images only when user passes the test)
    # https://docs.djangoproject.com/en/2.2/topics/auth/default/#django.contrib.auth.mixins.UserPassesTestMixin
    'test_func_upload_view': example_test_func,
    'attachment_filesize_limit': 100 * 1024 * 1024,  # 100 MB
}

# Allowed HTML Tags
BLEACH_ALLOWED_TAGS = [
    'p', 'br', 'b', 'i', 'u', 'em', 'strong', 'a', 'img', 'iframe',
    'ul', 'ol', 'li', 'span', 'div', 'blockquote', 'pre', 'code',
    'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'table', 'thead', 'tbody',
    'tr', 'th', 'td', 'hr', 'sub', 'sup', 'strike', 'font'
]

# Allowed Attributes
BLEACH_ALLOWED_ATTRIBUTES = {
    '*': ['style', 'class', 'color', 'background-color'],  # Style and class are allowed globally
    'a': ['href', 'title'],  # Links
    'img': ['src', 'alt', 'title', 'width', 'height'],  # Images
    'iframe': ['src', 'width', 'height', 'frameborder', 'allow', 'allowfullscreen'],  # Iframes
    'table': ['border', 'cellpadding', 'cellspacing'],  # Tables
    'td': ['colspan', 'rowspan'],  # Table cells
}

# Allowed Styles
BLEACH_ALLOWED_STYLES = [
    'color', 'background-color', 'font-family', 'font-size', 'font-weight',
    'text-decoration', 'text-align', 'width', 'height', 
    'margin', 'margin-left', 'margin-right', 'margin-top', 'margin-bottom', 'padding',
    'border', 'border-collapse', 'line-height'
]

# Allowed Protocols
BLEACH_ALLOWED_PROTOCOLS = ['http', 'https'] 

# Strip unknown tags if True, replace with HTML escaped characters if
# False
BLEACH_STRIP_TAGS = True

# Strip comments, or leave them in.
BLEACH_STRIP_COMMENTS = True

# Maximum size of uploaded files in bytes (e.g., 100 MB)
DATA_UPLOAD_MAX_MEMORY_SIZE = 100 * 1024 * 1024  # 100 MB
FILE_UPLOAD_MAX_MEMORY_SIZE = 100 * 1024 * 1024  # 100 MB

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'debug.log',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}